pipeline {
    agent any
    parameters {
        string(name: 'BRANCH', defaultValue: '*/master', description: 'checkout branch')
    }
    stages {
        stage('Checkout') {
            steps {
                echo "current branch: ${params.BRANCH}"
                checkout([$class: 'GitSCM', branches: [[name: "${params.BRANCH}"]], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins-ssh', url: 'git@192.168.155.43:tmax-am/superstore-backend.git']]])
            }
        }

        stage('Test') {
            steps {
                sh './gradlew clean test'
            }
        }

        stage('Gradle Build') {
            steps {
                sh './gradlew openapi3'
                sh './gradlew build'
            }
        }

        stage('Docker Build') {
            steps {
                script{
                    try {
                        sh 'docker-compose --env-file ./deploy/.env -f ./deploy/docker-compose.yml down --rmi all'
                    } catch (err) {
                        echo "failed to remove docker-compose: ${err}"
                    } finally {
                        sh 'docker-compose --env-file ./deploy/.env -f ./deploy/docker-compose.yml up -d'
                    }
                }
            }
        }
    }
}
